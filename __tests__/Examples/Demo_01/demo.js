/*! For license information please see demo.js.LICENSE.txt */
(()=>{var t={491:(t,e,a)=>{const{printButton:n,clickExec:i}=a(420),{V_Base:s}=a(481),c=new s({id:"Application_Component_Base",data:1240,meth:{increment:async()=>c.state(c.data+1),decrement:async()=>c.state(c.data-1),set1:async()=>c.state(11),set4:async()=>c.state(44)},view:async()=>`<info>\n              <h3>${c.id}</h3>\n              <h3 class="dataInfoPart">${c.data}</h3>\n            </info>\n            <actions>\n              ${await n("Set [1]","set1")}\n              ${await n("Set [4]","set4")}\n              ${await n("🔼 Increment","inc")}\n              ${await n("🔻 Decrement","dec")}\n            </actions>`,update:async()=>{document.querySelector(`#${c.id}`).innerHTML=await c.view(),i(`#${c.id} .set1`,c.meth.set1),i(`#${c.id} .set4`,c.meth.set4),i(`#${c.id} .inc`,c.meth.increment),i(`#${c.id} .dec`,c.meth.decrement)}});t.exports=c},999:(t,e,a)=>{const{printButton:n,clickExec:i}=a(420),{V_Base:s}=a(481);t.exports=appD=new s({id:"Application_AltComp",data:10,meth:{increment:async()=>appD.state(appD.data+1),decrement:async()=>appD.state(appD.data-1),set4:async()=>appD.state(44)},view:async()=>`<info>\n              <h3>${appD.id}</h3>\n              <h3 class="dataInfoPart">${appD.data}</h3>\n            </info>\n            <actions>\n              ${await n("Set Static Value [ -1111 ]","min")}\n              ${await n("🔼 Increment","inc")}\n              ${await n("🔻 Decrement","dec")}\n            </actions>`,update:async()=>{document.querySelector(`#${appD.id}`).innerHTML=await appD.view(),i("#"+appD.id+" .min",appD.meth.set4),i("#"+appD.id+" .inc",appD.meth.increment),i("#"+appD.id+" .dec",appD.meth.decrement)}}),t.exports=appD},288:(t,e,a)=>{const{printButton:n,clickExec:i}=a(420),{V_Base:s}=a(481);t.exports=coreAPP=new s({id:"CoreAppID",data:"Core App",view:()=>'<header>\n              <h1>📦 State Management</h1>\n            </header>\n\n            <main>\n              <div id="Application_Component_Base" class="baseElem"></div>\n              <div id="Application_AltComp" class="baseElem"></div>\n              <div id="Sample_Item_Component_Base" class="baseElem"></div>\n              <div id="Text_Component_Base" class="baseElem"></div>\n            </main>\n\n            <footer>\n              <p>Footer Placeholder Text just to take some space.</p>\n            </footer>',update(){document.querySelector(`#${coreAPP.id}`).innerHTML=coreAPP.view()}})},97:(t,e,a)=>{t.exports={coreAPP:a(288),appD:a(999),App2:a(491),sic:a(78),txtCP:a(895)}},78:(t,e,a)=>{const{printButton:n,clickExec:i}=a(420),{V_Base:s}=a(481);t.exports=sic=new s({id:"Sample_Item_Component_Base",data:50,view:async()=>`<info>\n              <h3>${sic.id}</h3>\n              <h3 class="dataInfoPart">${sic.data}</h3>\n            </info>\n            <actions>\n              ${await n("Set [11]","sic1")}\n              ${await n("Set [44]","sic4")}\n              ${await n("🔼 Increment","inc")}\n              ${await n("🔻 Decrement","dec")}\n            </actions>`,update:async()=>{document.querySelector(`#${sic.id}`).innerHTML=await sic.view(),i(`#${sic.id} .sic1`,(()=>sic.state(11))),i(`#${sic.id} .sic4`,(()=>sic.state(44))),i(`#${sic.id} .inc`,(()=>sic.state(sic.data+1))),i(`#${sic.id} .dec`,(()=>sic.state(sic.data-1)))}})},895:(t,e,a)=>{const{printButton:n,clickExec:i}=a(420),{V_Base:s}=a(481),c=new s({id:"Text_Component_Base",data:"Example String INIT Value.",view:async()=>`<info>\n              <h3>${c.id}</h3>\n              <h3 class="dataInfoPart">${c.data}</h3>\n            </info>\n            <actions>\n              ${await n("❌ Clear String Value","clearValue")}\n              ${await n('🔝 "XBC1"',"setTo")}\n              ${await n("⛑ Reset Changes","reset")}\n            </actions>`,update:async()=>{document.querySelector(`#${c.id}`).innerHTML=await c.view(),i("#"+c.id+" .clearValue",(()=>c.state(""))),i("#"+c.id+" .setTo",(()=>c.state("XBC1"))),i("#"+c.id+" .reset",(()=>c.state("Example String INIT Value.")))}});t.exports=c},481:t=>{const e={_list:{},getAll:async()=>e._list,get:async t=>e._list[t]||null,add:async t=>{e._list[t.id]=t},remove:async t=>{e._list=e._list.filter((e=>e.id!==t))},update:async(t,a)=>{await e.get(t).state(a)},render:async t=>{await e.get(t).view()},init:async()=>{e._list.forEach((t=>t.view()))},purge:async()=>{e._list={}}};t.exports={V_Base:class{constructor(t){this.id=t.id||"app",this.data=t.data||{},this.meth=t.meth||{},this.view=t.view||(async()=>console.log("Missing VIEW() Method")),this.update=t.update||(async()=>console.log("Missing UPDATE() Method")),this.state=async t=>{this.data=t,await this.update()},e.add(this)}},vComponents:e}},765:t=>{t.exports=(t,e)=>{document.querySelector(t).addEventListener("click",e)}},420:(t,e,a)=>{t.exports=helpers={clickExec:a(765),printButton:a(344)}},344:t=>{t.exports=async(t,e)=>`<button class="${e}">${t}</button>`},600:(t,e,a)=>{const n={},{V_Base:i,vComponents:s}=a(481);n.V_Base=i,n.vComponents=s;const c=a(420);n.clickExec=c.clickExec,n.printButton=c.printButton,t.exports=n}},e={};function a(n){var i=e[n];if(void 0!==i)return i.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,a),s.exports}(async()=>{a(97);const{vComponents:t}=a(600),e=await t.getAll();console.log(e),Object.keys(e).forEach((async t=>await e[t].update()))})()})();